<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        oNS/zBxoZbZvPbkAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>